server {
  listen 80;
  server_name localhost; # Adjust if needed for specific domain

  # Root directory for serving static files
  root /usr/share/nginx/html;
  index index.html index.htm;

  # Handle Vue Router history mode (SPA routing)
  # If a file or directory matching the URI is not found, serve index.html
  location / {
    try_files $uri $uri/ /index.html;
  }

  # Proxy API requests to the backend
  # This configuration assumes the frontend makes requests to /api/...
  # and the backend service is available at 'host.docker.internal:5000'
  # 'host.docker.internal' is a special DNS name that resolves to the host machine's IP from within a Docker container (on Docker Desktop for Mac/Windows).
  # For Linux, you might need to use the host's IP address directly or set up a common Docker network.
  # If using Docker Compose, 'tps-backend' (service name) on port 5000 would be 'http://tps-backend:5000'.
  location /api/ {
    # The target for proxy_pass should be the address of your backend service.
    # If running backend Docker container on the same host without Docker Compose linking,
    # and backend's port 5000 is mapped to host's port 5000,
    # then 'http://host.docker.internal:5000' might work for Docker Desktop.
    # For other setups (e.g. Linux host, or if backend is on a different machine/network),
    # this URL will need to be adjusted accordingly.
    # Example for Docker Compose: proxy_pass http://tps-backend:5000; (no trailing slash if path is used below)

    proxy_pass http://host.docker.internal:5000; # IMPORTANT: Adjust if not using Docker Desktop or if backend is elsewhere

    # Rewrite the path: remove /api prefix before forwarding to the backend
    # e.g., a frontend request to /api/users becomes /users when sent to the backend.
    rewrite ^/api/(.*)$ /$1 break;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # WebSocket support (if needed by your backend for any features)
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  # Optional: You can add custom error pages, logging, gzip settings, etc.
  # error_page 500 502 503 504 /50x.html;
  # location = /50x.html {
  #   root /usr/share/nginx/html;
  # }
}
